name: Build and Push Docker Image

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

env:
  SERVICE_IMAGE_NAME: "keboola/mcp-server"
  # SERVICE_ECR_REPOSITORY: "keboola/mcp-server"
  # SERVICE_ECR_PUSH_ROLE: "arn:aws:iam::968984773589:role/kbc-ecr-ApiServicePushRole-fG1HxhQrB2KA"
  # SERVICE_ECR_REGION: "us-east-1"
  # SERVICE_ACR_REPOSITORY: "mcp-server"
  # SERVICE_ACR_REGISTRY: "keboola.azurecr.io"
  # SERVICE_ACR_USERNAME: "mcp-server-push"
  GCP_REGISTRY: "us-central1-docker.pkg.dev"
  GCP_REPOSITORY: "keboola-prod-artifacts/mcp-server"
  GCP_IMAGE_NAME: "mcp-server"
  GCP_IDENTITY_PROVIDER: "projects/388088979044/locations/global/workloadIdentityPools/github/providers/github"
  GCP_SERVICE_ACCOUNT: "mcp-server-ci-push@keboola-prod-artifacts.iam.gserviceaccount.com"

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write # Needed to push to Docker Hub

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.SERVICE_IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,format=long
            type=raw,value=dev-{{sha}},enable=${{ github.event_name == 'pull_request' }}
            type=raw,value=production-{{sha}},enable={{is_default_branch}}
            type=raw,value=canary-orion-{{sha}},enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile # Explicitly specify the Dockerfile path
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: false
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - id: 'authGcp'
        name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          token_format: access_token
          create_credentials_file: true
          workload_identity_provider: ${{ env.GCP_IDENTITY_PROVIDER }}
          service_account: ${{ env.GCP_SERVICE_ACCOUNT }}

      - name: Tag and push docker image to Google GAR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GCP_REGISTRY }}
          username: oauth2accesstoken
          password: ${{ steps.authGcp.outputs.access_token }}

      - name: Push image to GCP GAR
        shell: bash
        run: |
          echo "${{ steps.meta.outputs.tags }}" | while IFS= read -r image_tag; do
            # image_tag is like "keboola/mcp-server:tag-suffix"
            # Extract the tag suffix (e.g., "production-sha123")
            tag_suffix=$(echo "$image_tag" | cut -d':' -f2)
            # Construct the full GAR image name
            full_gar_image="$GCP_REGISTRY/$GCP_REPOSITORY/$GCP_IMAGE_NAME:$tag_suffix"
            echo "Pushing $full_gar_image"
            # Tag the locally built image (already tagged by build-push) with the GAR name
            docker tag "$image_tag" "$full_gar_image"
            # Push the GAR-tagged image
            docker push "$full_gar_image"
          done

      - name: Trigger image tag update
        if: github.ref == 'refs/heads/main'
        uses: keboola/kbc-stacks/.github/actions/trigger-image-tag-update@main
        with:
          helm-chart: "mcp-server"
          image-tag: canary-orion-${{ github.sha }}
          github-app-private-key: ${{ secrets.GITOPS_KBC_STACKS_TRIGGER_APP_PVK }}

      - name: Save Docker image info
        if: github.event_name != 'pull_request'
        run: |
          echo "Docker Image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ steps.build-and-push.outputs.digest }}" > docker-image-info.md
          echo "Tags: ${{ steps.meta.outputs.tags }}" >> docker-image-info.md
          echo "Labels: ${{ steps.meta.outputs.labels }}" >> docker-image-info.md
