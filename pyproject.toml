[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "keboola-mcp-server"
version = "0.13.1"
description = "MCP server for interacting with Keboola Connection"
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
authors = [
    { name = "Keboola", email = "devel@keboola.com" }
]
dependencies = [
    "mcp[cli] ~= 1.6",
    "kbcstorage ~= 0.9",
    "httpx ~= 0.28",
    "google-cloud-bigquery ~= 3.31"
]

[project.optional-dependencies]
dev = [
    "black ~= 25.1",
    "build ~= 1.2",
    "flake8 ~= 7.2",
    "flake8-bugbear ~= 24.12",
    "flake8-colors ~= 0.1",
    "flake8-import-order ~= 0.18",
    "flake8-quotes ~= 3.4",
    "flake8-typing-imports ~= 1.16",
    "isort ~= 6.0",
    "mypy ~= 1.5",
    "pep8-naming ~= 0.14",
    "pytest ~= 8.3",
    "pytest-asyncio ~= 0.25",
    "pytest-cov ~= 6.0",
    "pytest-mock ~= 3.14",
    "tox ~= 4.23",
    "wheel~=0.45",
]

[project.scripts]
keboola-mcp = "keboola_mcp_server.cli:main"

[tool.black]
target-version = ["py310"]
skip_string_normalization = true
line-length = 120

[tool.isort]
profile = "black"
line_length = 120
multi_line_output = 3

[tool.hatch.build.targets.wheel]
packages = ["src/keboola_mcp_server"]

[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "function"
addopts = "--cov=keboola_mcp_server --cov-report=term-missing --cov-report=xml"
testpaths = ["tests"]
asyncio_mode = "strict"

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
show_error_codes = true
ignore_missing_imports = true
namespace_packages = true
explicit_package_bases = true

[tool.flake8]
max-line-length = 120
import-order-style = "edited"
application-package-names = ["keboola_mcp_server"]
min_python_version = "3.10.0"
# Skip checking I101 (import order), we want to sort imports in case sensitive manner using simply `isort`
extend-ignore = ["I101"]
# Skip checking F401 in __init__.py files (unused imports), we simplify imports in __init__.py and it is expected
# not to use them there. 
per-file-ignores = [
    "__init__.py: F401",
]

[tool.tox]
requires = ["tox>=4.23", "black>=25.1", "isort>=6.0"]
env_list = ["python", "black", "isort", "flake8"]

[tool.tox.env_run_base]
description = "Run tests"
extras = ["build"]
package = "wheel"
wheel_build_env = ".pkg"
commands = [["pytest", "--junitxml", "./test-results.xml", { replace = "posargs", default = ["tests"], extend = true }]]

[tool.tox.env.black]
description = "Run black"
deps = [
    "black"
]
commands = [
    ["black", "src/", "tests/", "--check"]
]

[tool.tox.env.isort]
description = "Run isort"
deps = [
    "isort"
]
commands = [
    ["isort", "src/", "tests/", "--check"]
]

[tool.tox.env.flake8]
description = "Run code style check by flake8"
deps = [
    "flake8",
    "flake8-bugbear",
    "flake8-colors",
    "flake8-import-order",
    "flake8-typing-imports",
    "Flake8-pyproject",
    "flake8-quotes",
    "pep8-naming",
]
package = "skip"
commands = [
    ["flake8", "src/", "tests/"]
]
